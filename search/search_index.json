{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Welcome to our website.</p>"},{"location":"checklist/","title":"Site Checklist","text":"<ol> <li>Customize the fields in your mkdocs.yml file</li> <li>Configure Google Analytics to use the right site ID</li> <li>Make sure that your .gitignore file includes the <code>site</code> directory</li> <li>Test the build</li> <li>Make sure the Edit button appears</li> <li>Make sure that code color heightening renders correctly</li> <li>run <code>git config advice.addIgnoredFile false</code></li> </ol>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"feedback/","title":"Feedback on Graph Data Modeling","text":"<p>You are welcome to connect with me on anytime on LinkedIn or submit any issues to GitHub Issue Log.  All pull-requests with fixes to errors or additions are always welcome.</p> <p>If you would like to fill out a short survey and give us ideas on how we can create better tools for intelligent textbooks in the future.</p>"},{"location":"glossary/","title":"Glossary of Terms","text":""},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#term","title":"Term","text":"<p>This is the definition of the term.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"prompts/","title":"Prompts","text":"<ol> <li>Course Description - we usually start with a generic course description as it would appear in a course catalog</li> <li>Bloom Taxonomy Refinements - we refine the course description to fit Blooms't taxonomy which starts out with concept definitions and proceeds to creating hands-on skills for creating new content</li> <li>Concept Enumeration - create a flat list of about 150 concepts ideally sorted from simple to complex</li> <li>Concept Dependencies - for each concept, create a list of what other concepts it depends on</li> <li>Concept Taxonomy - for all the concepts, create about ten classifications for all the concepts</li> <li>Concept Classification -- for each Concept in the graph, assign it to a primary Taxonomy ID</li> <li>Content Generation - once you have your concepts organized, you can then use this knowledge to create various content in different languages</li> <li>Glossary of Terms - we can generate an ISO-11179 concept definition for each of the concepts in our concept graph</li> </ol>"},{"location":"prompts/01-course-description/","title":"Course Description","text":"<p>Prompt</p> <p>You are an expert at helping instructors create a high-quality curriculum and detailed course descriptions that follow the structure of the 2001 Bloom taxonomy to create an ordered list of learning objectives. </p> <p>The ISO standards organization just created a new standard for queries on labeled property graphs. This new standard query language is called the \"Graph Query Language\" or GQL. The full standard is described in ISO/IEC 39075, released in April 2024. </p> <p>I would like to teach a course on GQL but I need your help creating a highly detailed course description for this GQL course and in what order they should be taught. </p> <p>Course Description: \"Learning GQL with AI\". Audience: This be taught by computer science and engineering colleges and universities around the world.</p> <p>Prerequisites: Students must already taken a introduction to databases course.  Students should also be familiar with data types such as strings, integers, decimals and lists.</p> <p>Here are some of the goals of this course: </p> <ol> <li>Understand the basic principles of current declarative query languages such as SQL, OpenCypher, SPARQL, and XQuery.</li> <li>Understand why standards make code that uses these languages more portable and prevents lock-in to vendor-specific database features.</li> <li>Understand the limitations of relational databases and their performance problems when doing large numbers of JOIN operations.</li> <li>Understand why the labeled-property-graph (LPG) model creates more accurate models of the world where relationships have their own properties.</li> <li>Understand why the current SQL language does not meet the needs of these LPG databases. </li> <li>Be able to describe the LPG data model and how relationships have their own properties. </li> <li>Give examples of LPG data models for social networks, retail commerce, banking fraud, and healthcare. </li> <li>Describe the key features of GQL, including how queries are created.</li> <li>Compare and contrast how GQL is similar and different from SQL </li> <li>Show that both GQL and SQL have similar support for transactions. </li> <li>Compare and contrast how GQL is both similar and different from OpenCypher </li> <li>Discuss the new features of GQL </li> <li>Discuss how GQL supports advanced pattern matching </li> <li>Discuss the limitations of the current version of GQL, including lack of support for constraints, role-based access control for vertices, and lack of support for accumulators</li> <li>Discuss the need for a new vector-index structure for similarity calculations </li> <li>Describe how future AI systems depend on generating precise queries over large world-models </li> </ol> <p>Please generate a detailed course description that follows the 2001 Bloom Taxonomy guidelines. </p> <p>Pay special attention to the order of the course learning objectives.</p>"},{"location":"prompts/01-course-description/#response","title":"Response","text":"<p>Grok-3 in Thinking mode thought for 38 seconds.</p> <p>Link to Grok-3 Transcript</p>"},{"location":"prompts/01-course-description/#course-description-for-learning-gql-with-ai","title":"Course Description for \"Learning GQL with AI\"","text":"<p>The International Organization for Standardization (ISO) has recently introduced the Graph Query Language (GQL) as a new standard for querying labeled property graphs, detailed in ISO/IEC 39075, released in April 2024. \"Learning GQL with AI\" is a comprehensive course designed for computer science and engineering students at colleges and universities worldwide. This course equips learners with the knowledge and skills to effectively utilize GQL for querying graph databases, leveraging the structured framework of the 2001 Bloom Taxonomy to progress from foundational understanding to advanced application and critical evaluation. By integrating AI-powered tools, the course enhances the learning experience, providing students with personalized feedback and practical insights into GQL\u2019s role in modern and future technologies.</p>"},{"location":"prompts/01-course-description/#audience","title":"Audience","text":"<p>This course targets computer science and engineering students who have completed an introductory database course and are familiar with basic data types such as strings, integers, decimals, and lists. It is tailored to prepare students for academic, research, or industry roles where graph databases and query languages are pivotal.</p>"},{"location":"prompts/01-course-description/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of an Introductory Database Course: Students should have a basic understanding of database concepts, including relational models and querying fundamentals.</li> <li>Familiarity with Basic Data Types: Knowledge of strings, integers, decimals, and lists is required to engage with GQL syntax and data structures effectively.</li> </ul>"},{"location":"prompts/01-course-description/#course-description_1","title":"Course Description","text":"<p>\"Learning GQL with AI\" offers an in-depth exploration of the Graph Query Language (GQL), the latest ISO standard for querying labeled property graphs. Students will develop a thorough understanding of GQL\u2019s foundations, its relationship to other query languages, and its practical applications in real-world scenarios. The course progresses through six carefully structured units, each aligned with the 2001 Bloom Taxonomy levels\u2014Remember, Understand, Apply, Analyze, Evaluate, and Create\u2014to ensure a logical and comprehensive learning journey. Hands-on exercises, supported by AI tools, enable students to design graph schemas, write optimized queries, and critically assess GQL\u2019s capabilities and limitations. By the end, students will be proficient in GQL and prepared to leverage its potential in graph-based applications, including those intersecting with artificial intelligence.</p>"},{"location":"prompts/01-course-description/#course-objectives","title":"Course Objectives","text":"<p>Upon successful completion of this course, students will be able to:</p>"},{"location":"prompts/01-course-description/#1-understand-the-context-and-need-for-gql","title":"1. Understand the Context and Need for GQL","text":"<ul> <li>Describe the basic principles of declarative query languages such as SQL, OpenCypher, SPARQL, and XQuery. (Understand)</li> <li>Explain the importance of standards in query languages for ensuring code portability and preventing vendor-specific lock-in. (Understand)</li> <li>Identify the limitations of relational databases, particularly performance issues with large numbers of JOIN operations. (Remember and Understand)</li> <li>Summarize the advantages of the labeled-property-graph (LPG) model for creating accurate models of real-world relationships. (Understand)</li> <li>Discuss why SQL is insufficient for meeting the querying needs of LPG databases. (Understand)</li> </ul>"},{"location":"prompts/01-course-description/#2-master-the-lpg-data-model","title":"2. Master the LPG Data Model","text":"<ul> <li>Define the components of the LPG data model, including vertices, edges, and properties. (Remember)</li> <li>Illustrate the application of the LPG model through examples in domains such as social networks, retail commerce, banking fraud detection, and healthcare. (Apply)</li> </ul>"},{"location":"prompts/01-course-description/#3-gain-proficiency-in-gql","title":"3. Gain Proficiency in GQL","text":"<ul> <li>List the key features of GQL and understand how queries are constructed. (Remember and Understand)</li> <li>Construct basic GQL queries to retrieve and manipulate data in an LPG database. (Apply)</li> </ul>"},{"location":"prompts/01-course-description/#4-analyze-gql-in-comparison-to-other-query-languages","title":"4. Analyze GQL in Comparison to Other Query Languages","text":"<ul> <li>Compare and contrast GQL with SQL in terms of syntax, functionality, and use cases. (Analyze)</li> <li>Demonstrate the similarities in transaction support between GQL and SQL. (Understand and Apply)</li> <li>Differentiate GQL from OpenCypher, highlighting their unique features and strengths. (Analyze)</li> </ul>"},{"location":"prompts/01-course-description/#5-explore-advanced-features-of-gql","title":"5. Explore Advanced Features of GQL","text":"<ul> <li>Describe the new features introduced in GQL beyond existing query languages. (Understand)</li> <li>Utilize GQL\u2019s advanced pattern matching capabilities to solve complex querying problems. (Apply)</li> </ul>"},{"location":"prompts/01-course-description/#6-evaluate-limitations-and-future-directions","title":"6. Evaluate Limitations and Future Directions","text":"<ul> <li>Evaluate the current limitations of GQL, including the lack of support for constraints, role-based access control for vertices, and accumulators. (Evaluate)</li> <li>Propose potential improvements or extensions to GQL to address its shortcomings. (Create)</li> <li>Discuss the role of GQL in future AI systems, particularly in generating precise queries over large world-models. (Understand and Evaluate)</li> <li>Discuss the need for a new vector-index structure for similarity calculations in GQL. (Analyze and Evaluate)</li> </ul>"},{"location":"prompts/01-course-description/#7-enhance-learning-with-ai-integration","title":"7. Enhance Learning with AI Integration","text":"<ul> <li>Explore how AI-powered tools can assist in learning and writing GQL queries, providing real-time feedback and optimization suggestions. (Apply and Analyze)</li> </ul>"},{"location":"prompts/01-course-description/#course-structure","title":"Course Structure","text":"<p>The course is organized into six units, each designed to build upon the previous one, ensuring a progressive development of skills and knowledge:</p>"},{"location":"prompts/01-course-description/#unit-1-introduction-to-database-query-languages-and-the-need-for-gql","title":"Unit 1: Introduction to Database Query Languages and the Need for GQL","text":"<ul> <li>Overview of declarative query languages (SQL, OpenCypher, SPARQL, XQuery).</li> <li>Importance of standards for portability and avoiding vendor lock-in.</li> <li>Limitations of relational databases with JOIN operations.</li> <li>Introduction to the LPG model and its advantages over relational models.</li> <li>Why SQL falls short for LPG databases.</li> <li>Activities: Case studies on database limitations; discussion on standardization benefits.</li> </ul>"},{"location":"prompts/01-course-description/#unit-2-understanding-the-lpg-data-model","title":"Unit 2: Understanding the LPG Data Model","text":"<ul> <li>Detailed exploration of vertices, edges, and properties in LPG.</li> <li>Practical examples of LPG models in social networks, retail, banking fraud, and healthcare.</li> <li>Activities: Design simple LPG schemas for given scenarios.</li> </ul>"},{"location":"prompts/01-course-description/#unit-3-introduction-to-gql","title":"Unit 3: Introduction to GQL","text":"<ul> <li>Key features and syntax of GQL.</li> <li>Writing and executing basic GQL queries.</li> <li>Activities: Hands-on query writing with AI-assisted feedback.</li> </ul>"},{"location":"prompts/01-course-description/#unit-4-comparing-gql-with-other-query-languages","title":"Unit 4: Comparing GQL with Other Query Languages","text":"<ul> <li>Comparative analysis of GQL with SQL and OpenCypher.</li> <li>Transaction support in GQL and SQL.</li> <li>Activities: Convert SQL queries to GQL; analyze differences with OpenCypher.</li> </ul>"},{"location":"prompts/01-course-description/#unit-5-advanced-features-and-pattern-matching-in-gql","title":"Unit 5: Advanced Features and Pattern Matching in GQL","text":"<ul> <li>New features unique to GQL.</li> <li>Advanced pattern matching techniques.</li> <li>Activities: Solve complex querying problems using pattern matching.</li> </ul>"},{"location":"prompts/01-course-description/#unit-6-limitations-and-future-directions-of-gql","title":"Unit 6: Limitations and Future Directions of GQL","text":"<ul> <li>Critical evaluation of GQL\u2019s limitations (e.g., constraints, access control, accumulators).</li> <li>Exploration of future enhancements, such as vector-index structures.</li> <li>GQL\u2019s role in AI-driven world-model querying.</li> <li>Activities: Propose GQL extensions; discuss AI integration scenarios.</li> </ul>"},{"location":"prompts/01-course-description/#teaching-methodology","title":"Teaching Methodology","text":"<p>Each unit combines theoretical lectures with practical, hands-on exercises to reinforce learning. AI-powered tools are integrated throughout the course to:</p> <ul> <li>Provide real-time feedback on query syntax and performance.</li> <li>Suggest optimizations for GQL queries.</li> <li>Facilitate interactive learning through personalized examples and debugging assistance.</li> </ul> <p>Assessments include quizzes (Remember and Understand), practical assignments (Apply and Analyze), and a final project (Evaluate and Create) where students design and query an LPG database for a real-world application.</p>"},{"location":"prompts/01-course-description/#learning-outcomes","title":"Learning Outcomes","text":"<p>By the end of \"Learning GQL with AI,\" students will:</p> <ol> <li>Be proficient in writing and optimizing GQL queries for labeled property graphs.</li> <li>Understand GQL\u2019s position within the landscape of query languages and its advantages over alternatives.</li> <li>Critically evaluate GQL\u2019s current capabilities and propose future enhancements.</li> <li>Appreciate GQL\u2019s relevance to AI systems and graph-based applications.</li> <li>Leverage AI tools to enhance their learning and problem-solving skills.</li> </ol> <p>This course prepares students to apply GQL in academic research, industry projects, or advanced studies, particularly in fields where graph databases and AI intersect.</p>"},{"location":"prompts/02-concept-enumeration/","title":"Concept Enumeration","text":"<p>Prompt</p> <p>You are an expert at helping instructors create a high-quality list of ordered concept labels for teaching courses. You use the 2001 Bloom taxonomy to order concepts from foundational to concepts where students generate their queries. </p> <p>The ISO standards organization just created a new standard for queries on labeled property graphs. This new standard query language is called the \"Graph Query Language\" or GQL. The full standard is described in ISO/IEC 39075, released in April 2024. </p> <p>I would like to teach a course on this new language but I need your help getting a list of concepts that should be taught in this course and in what order they should be taught. Here are some of the goals of this course: </p> <ol> <li>Understand the basic principles of current declarative query languages such as SQL, OpenCypher, SPARQL, and XQuery.</li> <li>Understand why standards make code that uses these languages more portable and prevents lock-in to vendor-specific database features.</li> <li>Understand the limitations of relational databases and their performance problems when doing large numbers of JOIN operations.</li> <li>Understand why the labeled-property-graph (LPG) model creates more accurate models of the world where relationships have their own properties.</li> <li>Understand why the current SQL language does not meet the needs of these LPG databases. </li> <li>Be able to describe the LPG data model and how relationships have their own properties. </li> <li>Give examples of LPG data models for social networks, retail commerce, banking fraud, and healthcare. </li> <li>Describe the key features of GQL, including how queries are created.</li> <li>Compare and contrast how GQL is similar and different from SQL </li> <li>Show that both GQL and SQL have similar support for transactions. </li> <li>Compare and contrast how GQL is both similar and different from OpenCypher </li> <li>Discuss the new features of GQL </li> <li>Discuss how GQL supports advanced pattern matching </li> <li>Discuss the limitations of the current version of GQL, including lack of support for constraints, role-based access control for vertices, and lack of support for accumulators</li> <li>Discuss the need for a new vector-index structure for similarity calculations </li> <li>Describe how future AI systems depend on generating precise queries over large world-models </li> </ol> <p>Please generate a numbered list of this course's 200 most important concepts. </p> <p>Pay special attention to the order of these concepts, placing foundational concepts first and more advanced concepts last. Try to order the list so concepts later only depend on prior concepts already listed.</p>"}]}